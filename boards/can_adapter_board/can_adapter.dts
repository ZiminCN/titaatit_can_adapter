/*
 * Copyright (c) 2019 STMicroelectronics.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;
#include <st/g4/stm32g473Xc.dtsi>
#include "can_adapter.dtsi"
#include "stm32g473rctx_pinctrl.dtsi"
#include <zephyr/dt-bindings/input/input-event-codes.h>

/ {
	model = "STMicroelectronics";
	compatible = "st,stm32g473rc";

	chosen {
		zephyr,console = &rtt0;
		zephyr,shell-uart = &rtt0;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,canfd1 = &fdcan1;
		zephyr,canfd2 = &fdcan2;
		zephyr,canfd3 = &fdcan3;
		zephyr,lpuart1 = &lpuart1;
	};

	rtt0: rtt_chan0 {
		compatible = "segger,rtt-uart";
		status = "okay";
	};

	aliases {
		watchdog0 = &iwdg;
	};
	zephyr,user {
		pwr-48v-mosfet-gpios = <&gpioa 2 GPIO_ACTIVE_HIGH>;
	};
};

&clk_lsi {
	status = "okay";
};

&clk_hsi48 {
	status = "okay";
};

&clk_hse {
	clock-frequency = <DT_FREQ_M(8)>;
	status = "okay";
};

&pll {
	div-m = <2>;
	mul-n = <85>;
	div-p = <2>;
	div-q = <2>;
	div-r = <2>;
	clocks = <&clk_hse>;
	status = "okay";
	// div-m = <1>;
	// mul-n = <40>;
	// div-p = <2>;
	// div-q = <2>;
	// div-r = <2>;
	// clocks = <&clk_hse>;
	// status = "okay";
};


&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(170)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <1>;
	apb2-prescaler = <1>;
};

&lpuart1 {
	pinctrl-0 = <&lpuart1_tx_pb11 &lpuart1_rx_pb10>;
	pinctrl-names = "default";
	current-speed = <115200>;
	status = "okay";
};

&rtc {
	clocks = <&rcc STM32_CLOCK_BUS_APB1 0x00000400>,
		 <&rcc STM32_SRC_LSI RTC_SEL(2)>;
	status = "okay";
};

&flash0 {
	// partitions {
	// 	compatible = "fixed-partitions";
	// 	#address-cells = <1>;
	// 	#size-cells = <1>;

	// 	boot_partition: partition@0 {
	// 		label = "bootloader";
	// 		reg = <0x00000000 DT_SIZE_K(64)>;
	// 	};

	// 	slot0_partition: partition@10000 {
	// 		label = "image-0";
	// 		reg = <0x00010000 DT_SIZE_K(190)>;
	// 	};

	// 	factory_partition: partition@3f800 {
	// 		label = "factory_arg";
	// 		reg = <0x0003F800 DT_SIZE_K(2)>;
	// 	};
	// };

	// //! It seems that the size of the chip sectors is inconsistent. 
	// //! Maybe it is related to the bank. It has not been verified yet. 
	// //! When attempting to place the boot parameter at the end of the region, 
	// //! an error of being unable to erase or write occurred. 
	// //! Just swapping the regions of the app and the boot parameter restored it to normal.
	// partitions {
	// 	compatible = "fixed-partitions";
	// 	#address-cells = <1>;
	// 	#size-cells = <1>;

	// 	boot_partition: partition@0 {
	// 		label = "bootloader";
	// 		reg = <0x00000000 DT_SIZE_K(64)>;
	// 	};

	// 	factory_partition: partition@10000 {
	// 		label = "factory_arg";
	// 		reg = <0x00010000 DT_SIZE_K(2)>;
	// 	};

	// 	slot0_partition: partition@10800 {
	// 		label = "image-0";
	// 		reg = <0x00010800 DT_SIZE_K(190)>;
	// 	};
	// };

	// partitions {
	// 	compatible = "fixed-partitions";
	// 	#address-cells = <1>;
	// 	#size-cells = <1>;

	// 	boot_partition: partition@0 {
	// 		label = "bootloader";
	// 		reg = <0x00000000 DT_SIZE_K(94)>;
	// 	};

	// 	factory_partition: partition@17800 {
	// 		label = "factory_arg";
	// 		reg = <0x00017800 DT_SIZE_K(2)>;
	// 	};

	// 	slot0_partition: partition@18000 {
	// 		label = "image-0";
	// 		reg = <0x00018000 DT_SIZE_K(160)>;
	// 	};
	// };
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
			label = "ddtboot";
			reg = <0x00000000 DT_SIZE_K(36)>;
			read-only;
		};
		slot0_partition: partition@9000 {
			label = "image-0";
			reg = <0x00009000 DT_SIZE_K(88)>;
		};

		factory_partition: partition@1f000 {
			label = "factory_arg";
			reg = <0x0001f000 DT_SIZE_K(2)>;
		};
		/* Set 1KB of boot_arg at the end of 128KB flash */
		boot_arg_partition: partition@1f800 {
			label = "boot_arg";
			reg = <0x0001f800 DT_SIZE_K(2)>;
		};
	};
};

&iwdg {
	status = "okay";
};

&rng {
	status = "okay";
};

&die_temp {
	status = "okay";
};

&dac1 {
	pinctrl-0 = <&dac1_out1_pa4>;
	pinctrl-names = "default";
	status = "okay";
};

// facan clocks reference RM0440:"RCC_APB1ENR1", "RCC_CCIPR",
//            "./doc/CANFD参考.png" and "./doc/CANFD参考2.png"
// bit 25: FDCANEN, 1 << 25 = 0x02000000
// HSE: 0
// PLL_Q: 1
// PCLK: 2
// Reserved: 3
&fdcan1 {
	clocks = <&rcc STM32_CLOCK_BUS_APB1 0x02000000>,
		 <&rcc STM32_SRC_PLL_Q FDCAN_SEL(1)>;
	pinctrl-0 = <&fdcan1_rx_pb8 &fdcan1_tx_pb9>;
	pinctrl-names = "default";
	bus-speed = <1000000>;
	bus-speed-data = <5000000>;
	sample-point = <800>;
	sample-point-data = <750>;
	status = "okay";
};
&fdcan2 {
	clocks = <&rcc STM32_CLOCK_BUS_APB1 0x02000000>,
		 <&rcc STM32_SRC_PLL_Q FDCAN_SEL(1)>;
	pinctrl-0 = <&fdcan2_rx_pb12 &fdcan2_tx_pb13>;
	pinctrl-names = "default";
	bus-speed = <1000000>;
	bus-speed-data = <5000000>;
	sample-point = <800>;
	sample-point-data = <750>;
	status = "okay";
};
&fdcan3 {
	clocks = <&rcc STM32_CLOCK_BUS_APB1 0x02000000>,
		 <&rcc STM32_SRC_PLL_Q FDCAN_SEL(1)>;
	pinctrl-0 = <&fdcan3_rx_pb3 &fdcan3_tx_pb4>;
	pinctrl-names = "default";
	bus-speed = <1000000>;
	bus-speed-data = <5000000>;
	sample-point = <800>;
	sample-point-data = <750>;
	status = "okay";
};

&usb {
	pinctrl-0 = <&usb_dm_pa11 &usb_dp_pa12>;
	pinctrl-names = "default";
	status = "okay";
};

&usb {
	pinctrl-0 = <&usb_dm_pa11 &usb_dp_pa12>;
	pinctrl-names = "default";
	status = "okay";
};

zephyr_udc0: &usb {
	status = "okay";
	cdc_acm_uart0: cdc_acm_uart0 {
		compatible = "zephyr,cdc-acm-uart";
	};
};
